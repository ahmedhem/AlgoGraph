(()=>{"use strict";var e={d:(t,n)=>{for(var s in n)e.o(n,s)&&!e.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:n[s]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{i:()=>u});class t{constructor(e,t){this.start=e,this.end=t,this.weights=new Set}addWeight(e){return this.weights.add(e)}removeWeight(e){if(this.weights.delete(e),0===this.weights.size)return-1}equals(e){return this.start===e.start&&this.end===e.end}toString(){const e=[...this.weights].join(", ");return`from ${this.start} to  ${this.end} with weight {${e}}`}}class n{constructor(e,t){this.position=e,this.number=t,this.color="#000",this.edges=new Set}addEdge(e,n=1){const s=this.getEdge(e);if(!s){const s=new t(this.number,e);return s.addWeight(n),this.edges.add(s),!0}return s.addWeight(n),!0}removeEdge(e,t){const n=this.getEdge(e);return!!n&&(t?-1===n.removeWeight(t)&&this.edges.delete(n):this.edges.delete(n),!0)}getEdge(e){let t=null;for(let n of this.edges.keys())n.end===e&&(t=n);return t}removeConnection(e){this.removeEdge(e),e.removeEdge(this)}equals(e){return this.number===e.number}toString(){return this.number}}const s=new class{constructor(e=""){this.content=e,this.insert_content(e),this.pop_up=document.getElementById("Modal"),this.close_icon=document.querySelector(".hide-Modal"),this.close_icon.onclick=()=>this.pop_up.style.display="none",window.onclick=e=>{e.target===this.pop_up&&(this.pop_up.style.display="none")}}insert_content(e){document.querySelector("#inserted-content").innerHTML=e}open(e=80){this.changeSize(e),this.pop_up.style.display="block"}close(){this.changeSize(80),this.close_icon.click()}changeSize(e){return e>=40&&e<=100&&(document.querySelector(".Modal-content").style.width=e+"%",!0)}};Object.freeze(s);const o=s;let i={nodes:[],add:function(e){1===this.nodes.length?(this.nodes.push(e),UI.popupEdge=u.getEdge(this.nodes[0].number,this.nodes[1].number),UI.popupEdge||(UI.popupEdge=new t(this.nodes[0].number,this.nodes[1].number)),UI.isWighted?(o.insert_content('\n        <div class="weight-container">\n            <span id="weight-input-text">Want to Add a weight?</span>\n            <input id="weight-input" class="" type="number" min="0" value="1">\n            <button type="submit" class="btn cancel">Confirm</button>\n        </div>\n    '),document.querySelector("#weight-input").addEventListener("keyup",(e=>{13===e.keyCode&&(r(e.target.value),e.target.value=1)})),document.querySelector(".cancel").addEventListener("click",(e=>{r(document.querySelector("#weight-input").value),document.querySelector("#weight-input").value=1})),o.open(),o.changeSize(50)):(u.addEdge(this.nodes[0].number,this.nodes[1].number),UI.isDirected||u.addEdge(this.nodes[1].number,this.nodes[0].number)),this.nodes=[]):this.nodes.push(e)}},d=function(e,t){t.clearRect(0,0,e.width,e.height),function(e){for(let t of u.nodes.keys())drawNode(e,t,t.number,t.color,UI.nodeSize)}(t,UI.nodeSize),function(e){for(let t of u.nodes.keys())for(let n of t.edges)drawEdge(e,u.getNode(n.start),u.getNode(n.end),null,UI.nodeSize)}(t,UI.nodeSize),i.nodes[0]&&drawNode(t,i.nodes[0],"","green",UI.nodeSize,1)};function r(e){UI.popupEdge.addWeight(Number(e)),u.addEdge(UI.popupEdge.start,UI.popupEdge.end,Number(e)),UI.isDirected||u.addEdge(UI.popupEdge.end,UI.popupEdge.start,Number(e)),UI.popupEdge=0,o.close()}const h=document.getElementById("main_canvas"),u=new class{constructor(){this.nodes=new Set,this.nodeCount=1,this.availableNum=[]}addNode(e){let t=null;0!==this.availableNum.length?(t=this.availableNum[0],this.availableNum.splice(0,1)):t=this.nodeCount;const s=new n(e,t);this.nodes.add(s),this.nodeCount++,UI.fire()}getNode(e){let t=null;for(let n of this.nodes.keys())n.number===e&&(t=n);return t}removeNode(e){const t=this.getNode(e),n=t.number;for(let e of this.nodes.keys())for(let t of e.edges.keys())t.end===n&&this.removeEdge(t.start,t.end);this.availableNum.push(n),this.nodes.delete(t),this.nodeCount--,UI.fire()}addEdge(e,t,n=1){const s=this.getNode(e),o=this.getNode(t);return!(!s||!o||(s.addEdge(o.number,n),UI.fire(),0))}removeEdge(e,t,n){const s=this.getNode(e),o=this.getNode(t),i=s.removeEdge(o.number,n);return i&&UI.fire(),i}getEdge(e,t){const n=this.getNode(e),s=this.getNode(t);return n.getEdge(s.number)}};if(h&&h.getContext){h.width=window.innerWidth,h.height=.87*window.innerHeight;const e=h.getContext("2d");e&&(d(h,e),UI.canvas=h,UI.ctx=e,UI.subscribe(d))}})();